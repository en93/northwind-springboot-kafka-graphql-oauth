/*
 * This file is generated by jOOQ.
 */
package en93.sample.northwind_modulith.webapp.generated.jooq;


import en93.sample.northwind_modulith.webapp.generated.jooq.tables.CategoriesTable;
import en93.sample.northwind_modulith.webapp.generated.jooq.tables.CustomersTable;
import en93.sample.northwind_modulith.webapp.generated.jooq.tables.EmployeesTable;
import en93.sample.northwind_modulith.webapp.generated.jooq.tables.OrderdetailsTable;
import en93.sample.northwind_modulith.webapp.generated.jooq.tables.OrdersTable;
import en93.sample.northwind_modulith.webapp.generated.jooq.tables.ProductsTable;
import en93.sample.northwind_modulith.webapp.generated.jooq.tables.ShippersTable;
import en93.sample.northwind_modulith.webapp.generated.jooq.tables.SuppliersTable;
import en93.sample.northwind_modulith.webapp.generated.jooq.tables.records.CategoriesRecord;
import en93.sample.northwind_modulith.webapp.generated.jooq.tables.records.CustomersRecord;
import en93.sample.northwind_modulith.webapp.generated.jooq.tables.records.EmployeesRecord;
import en93.sample.northwind_modulith.webapp.generated.jooq.tables.records.OrderdetailsRecord;
import en93.sample.northwind_modulith.webapp.generated.jooq.tables.records.OrdersRecord;
import en93.sample.northwind_modulith.webapp.generated.jooq.tables.records.ProductsRecord;
import en93.sample.northwind_modulith.webapp.generated.jooq.tables.records.ShippersRecord;
import en93.sample.northwind_modulith.webapp.generated.jooq.tables.records.SuppliersRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CategoriesRecord> CATEGORIES_PKEY = Internal.createUniqueKey(CategoriesTable.CATEGORIES, DSL.name("categories_pkey"), new TableField[] { CategoriesTable.CATEGORIES.CATEGORYID }, true);
    public static final UniqueKey<CustomersRecord> CUSTOMERS_PKEY = Internal.createUniqueKey(CustomersTable.CUSTOMERS, DSL.name("customers_pkey"), new TableField[] { CustomersTable.CUSTOMERS.CUSTOMERID }, true);
    public static final UniqueKey<EmployeesRecord> EMPLOYEES_PKEY = Internal.createUniqueKey(EmployeesTable.EMPLOYEES, DSL.name("employees_pkey"), new TableField[] { EmployeesTable.EMPLOYEES.EMPLOYEEID }, true);
    public static final UniqueKey<OrderdetailsRecord> ORDERDETAILS_PKEY = Internal.createUniqueKey(OrderdetailsTable.ORDERDETAILS, DSL.name("orderdetails_pkey"), new TableField[] { OrderdetailsTable.ORDERDETAILS.ORDERDETAILID }, true);
    public static final UniqueKey<OrdersRecord> ORDERS_PKEY = Internal.createUniqueKey(OrdersTable.ORDERS, DSL.name("orders_pkey"), new TableField[] { OrdersTable.ORDERS.ORDERID }, true);
    public static final UniqueKey<ProductsRecord> PRODUCTS_PKEY = Internal.createUniqueKey(ProductsTable.PRODUCTS, DSL.name("products_pkey"), new TableField[] { ProductsTable.PRODUCTS.PRODUCTID }, true);
    public static final UniqueKey<ShippersRecord> SHIPPERS_PKEY = Internal.createUniqueKey(ShippersTable.SHIPPERS, DSL.name("shippers_pkey"), new TableField[] { ShippersTable.SHIPPERS.SHIPPERID }, true);
    public static final UniqueKey<SuppliersRecord> SUPPLIERS_PKEY = Internal.createUniqueKey(SuppliersTable.SUPPLIERS, DSL.name("suppliers_pkey"), new TableField[] { SuppliersTable.SUPPLIERS.SUPPLIERID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<OrderdetailsRecord, OrdersRecord> ORDERDETAILS__ORDERDETAILS_ORDERID_FKEY = Internal.createForeignKey(OrderdetailsTable.ORDERDETAILS, DSL.name("orderdetails_orderid_fkey"), new TableField[] { OrderdetailsTable.ORDERDETAILS.ORDERID }, Keys.ORDERS_PKEY, new TableField[] { OrdersTable.ORDERS.ORDERID }, true);
    public static final ForeignKey<OrderdetailsRecord, ProductsRecord> ORDERDETAILS__ORDERDETAILS_PRODUCTID_FKEY = Internal.createForeignKey(OrderdetailsTable.ORDERDETAILS, DSL.name("orderdetails_productid_fkey"), new TableField[] { OrderdetailsTable.ORDERDETAILS.PRODUCTID }, Keys.PRODUCTS_PKEY, new TableField[] { ProductsTable.PRODUCTS.PRODUCTID }, true);
    public static final ForeignKey<OrdersRecord, CustomersRecord> ORDERS__ORDERS_CUSTOMERID_FKEY = Internal.createForeignKey(OrdersTable.ORDERS, DSL.name("orders_customerid_fkey"), new TableField[] { OrdersTable.ORDERS.CUSTOMERID }, Keys.CUSTOMERS_PKEY, new TableField[] { CustomersTable.CUSTOMERS.CUSTOMERID }, true);
    public static final ForeignKey<OrdersRecord, EmployeesRecord> ORDERS__ORDERS_EMPLOYEEID_FKEY = Internal.createForeignKey(OrdersTable.ORDERS, DSL.name("orders_employeeid_fkey"), new TableField[] { OrdersTable.ORDERS.EMPLOYEEID }, Keys.EMPLOYEES_PKEY, new TableField[] { EmployeesTable.EMPLOYEES.EMPLOYEEID }, true);
    public static final ForeignKey<OrdersRecord, ShippersRecord> ORDERS__ORDERS_SHIPPERID_FKEY = Internal.createForeignKey(OrdersTable.ORDERS, DSL.name("orders_shipperid_fkey"), new TableField[] { OrdersTable.ORDERS.SHIPPERID }, Keys.SHIPPERS_PKEY, new TableField[] { ShippersTable.SHIPPERS.SHIPPERID }, true);
    public static final ForeignKey<ProductsRecord, CategoriesRecord> PRODUCTS__PRODUCTS_CATEGORYID_FKEY = Internal.createForeignKey(ProductsTable.PRODUCTS, DSL.name("products_categoryid_fkey"), new TableField[] { ProductsTable.PRODUCTS.CATEGORYID }, Keys.CATEGORIES_PKEY, new TableField[] { CategoriesTable.CATEGORIES.CATEGORYID }, true);
    public static final ForeignKey<ProductsRecord, SuppliersRecord> PRODUCTS__PRODUCTS_SUPPLIERID_FKEY = Internal.createForeignKey(ProductsTable.PRODUCTS, DSL.name("products_supplierid_fkey"), new TableField[] { ProductsTable.PRODUCTS.SUPPLIERID }, Keys.SUPPLIERS_PKEY, new TableField[] { SuppliersTable.SUPPLIERS.SUPPLIERID }, true);
}
