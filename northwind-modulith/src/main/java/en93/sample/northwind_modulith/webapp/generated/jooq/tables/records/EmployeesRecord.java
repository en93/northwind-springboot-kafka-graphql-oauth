/*
 * This file is generated by jOOQ.
 */
package en93.sample.northwind_modulith.webapp.generated.jooq.tables.records;


import en93.sample.northwind_modulith.webapp.generated.jooq.tables.EmployeesTable;
import en93.sample.northwind_modulith.webapp.generated.jooq.tables.pojos.EmployeesEntity;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EmployeesRecord extends UpdatableRecordImpl<EmployeesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.employees.employeeid</code>.
     */
    public EmployeesRecord setEmployeeid(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.employees.employeeid</code>.
     */
    public Integer getEmployeeid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.employees.lastname</code>.
     */
    public EmployeesRecord setLastname(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.employees.lastname</code>.
     */
    public String getLastname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.employees.firstname</code>.
     */
    public EmployeesRecord setFirstname(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.employees.firstname</code>.
     */
    public String getFirstname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.employees.birthdate</code>.
     */
    public EmployeesRecord setBirthdate(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.employees.birthdate</code>.
     */
    public LocalDateTime getBirthdate() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.employees.photo</code>.
     */
    public EmployeesRecord setPhoto(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.employees.photo</code>.
     */
    public String getPhoto() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.employees.notes</code>.
     */
    public EmployeesRecord setNotes(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.employees.notes</code>.
     */
    public String getNotes() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EmployeesRecord
     */
    public EmployeesRecord() {
        super(EmployeesTable.EMPLOYEES);
    }

    /**
     * Create a detached, initialised EmployeesRecord
     */
    public EmployeesRecord(Integer employeeid, String lastname, String firstname, LocalDateTime birthdate, String photo, String notes) {
        super(EmployeesTable.EMPLOYEES);

        setEmployeeid(employeeid);
        setLastname(lastname);
        setFirstname(firstname);
        setBirthdate(birthdate);
        setPhoto(photo);
        setNotes(notes);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised EmployeesRecord
     */
    public EmployeesRecord(EmployeesEntity value) {
        super(EmployeesTable.EMPLOYEES);

        if (value != null) {
            setEmployeeid(value.getEmployeeid());
            setLastname(value.getLastname());
            setFirstname(value.getFirstname());
            setBirthdate(value.getBirthdate());
            setPhoto(value.getPhoto());
            setNotes(value.getNotes());
            resetChangedOnNotNull();
        }
    }
}
