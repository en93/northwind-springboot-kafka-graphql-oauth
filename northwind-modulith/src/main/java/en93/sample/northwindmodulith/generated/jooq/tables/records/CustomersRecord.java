/*
 * This file is generated by jOOQ.
 */
package en93.sample.northwindmodulith.generated.jooq.tables.records;


import en93.sample.northwindmodulith.generated.jooq.tables.CustomersTable;
import en93.sample.northwindmodulith.generated.jooq.tables.pojos.CustomersEntity;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CustomersRecord extends UpdatableRecordImpl<CustomersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.customers.customerid</code>.
     */
    public CustomersRecord setCustomerid(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.customerid</code>.
     */
    public Integer getCustomerid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.customers.customername</code>.
     */
    public CustomersRecord setCustomername(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.customername</code>.
     */
    public String getCustomername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.customers.contactname</code>.
     */
    public CustomersRecord setContactname(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.contactname</code>.
     */
    public String getContactname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.customers.address</code>.
     */
    public CustomersRecord setAddress(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.address</code>.
     */
    public String getAddress() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.customers.city</code>.
     */
    public CustomersRecord setCity(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.city</code>.
     */
    public String getCity() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.customers.postalcode</code>.
     */
    public CustomersRecord setPostalcode(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.postalcode</code>.
     */
    public String getPostalcode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.customers.country</code>.
     */
    public CustomersRecord setCountry(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.customers.country</code>.
     */
    public String getCountry() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CustomersRecord
     */
    public CustomersRecord() {
        super(CustomersTable.CUSTOMERS);
    }

    /**
     * Create a detached, initialised CustomersRecord
     */
    public CustomersRecord(Integer customerid, String customername, String contactname, String address, String city, String postalcode, String country) {
        super(CustomersTable.CUSTOMERS);

        setCustomerid(customerid);
        setCustomername(customername);
        setContactname(contactname);
        setAddress(address);
        setCity(city);
        setPostalcode(postalcode);
        setCountry(country);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised CustomersRecord
     */
    public CustomersRecord(CustomersEntity value) {
        super(CustomersTable.CUSTOMERS);

        if (value != null) {
            setCustomerid(value.getCustomerid());
            setCustomername(value.getCustomername());
            setContactname(value.getContactname());
            setAddress(value.getAddress());
            setCity(value.getCity());
            setPostalcode(value.getPostalcode());
            setCountry(value.getCountry());
            resetChangedOnNotNull();
        }
    }
}
