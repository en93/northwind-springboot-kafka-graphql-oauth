/*
 * This file is generated by jOOQ.
 */
package en93.sample.northwindmodulith.generated.jooq.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CustomersEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer customerid;
    private final String customername;
    private final String contactname;
    private final String address;
    private final String city;
    private final String postalcode;
    private final String country;

    public CustomersEntity(CustomersEntity value) {
        this.customerid = value.customerid;
        this.customername = value.customername;
        this.contactname = value.contactname;
        this.address = value.address;
        this.city = value.city;
        this.postalcode = value.postalcode;
        this.country = value.country;
    }

    public CustomersEntity(
        Integer customerid,
        String customername,
        String contactname,
        String address,
        String city,
        String postalcode,
        String country
    ) {
        this.customerid = customerid;
        this.customername = customername;
        this.contactname = contactname;
        this.address = address;
        this.city = city;
        this.postalcode = postalcode;
        this.country = country;
    }

    /**
     * Getter for <code>public.customers.customerid</code>.
     */
    public Integer getCustomerid() {
        return this.customerid;
    }

    /**
     * Getter for <code>public.customers.customername</code>.
     */
    public String getCustomername() {
        return this.customername;
    }

    /**
     * Getter for <code>public.customers.contactname</code>.
     */
    public String getContactname() {
        return this.contactname;
    }

    /**
     * Getter for <code>public.customers.address</code>.
     */
    public String getAddress() {
        return this.address;
    }

    /**
     * Getter for <code>public.customers.city</code>.
     */
    public String getCity() {
        return this.city;
    }

    /**
     * Getter for <code>public.customers.postalcode</code>.
     */
    public String getPostalcode() {
        return this.postalcode;
    }

    /**
     * Getter for <code>public.customers.country</code>.
     */
    public String getCountry() {
        return this.country;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final CustomersEntity other = (CustomersEntity) obj;
        if (this.customerid == null) {
            if (other.customerid != null)
                return false;
        }
        else if (!this.customerid.equals(other.customerid))
            return false;
        if (this.customername == null) {
            if (other.customername != null)
                return false;
        }
        else if (!this.customername.equals(other.customername))
            return false;
        if (this.contactname == null) {
            if (other.contactname != null)
                return false;
        }
        else if (!this.contactname.equals(other.contactname))
            return false;
        if (this.address == null) {
            if (other.address != null)
                return false;
        }
        else if (!this.address.equals(other.address))
            return false;
        if (this.city == null) {
            if (other.city != null)
                return false;
        }
        else if (!this.city.equals(other.city))
            return false;
        if (this.postalcode == null) {
            if (other.postalcode != null)
                return false;
        }
        else if (!this.postalcode.equals(other.postalcode))
            return false;
        if (this.country == null) {
            if (other.country != null)
                return false;
        }
        else if (!this.country.equals(other.country))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.customerid == null) ? 0 : this.customerid.hashCode());
        result = prime * result + ((this.customername == null) ? 0 : this.customername.hashCode());
        result = prime * result + ((this.contactname == null) ? 0 : this.contactname.hashCode());
        result = prime * result + ((this.address == null) ? 0 : this.address.hashCode());
        result = prime * result + ((this.city == null) ? 0 : this.city.hashCode());
        result = prime * result + ((this.postalcode == null) ? 0 : this.postalcode.hashCode());
        result = prime * result + ((this.country == null) ? 0 : this.country.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CustomersEntity (");

        sb.append(customerid);
        sb.append(", ").append(customername);
        sb.append(", ").append(contactname);
        sb.append(", ").append(address);
        sb.append(", ").append(city);
        sb.append(", ").append(postalcode);
        sb.append(", ").append(country);

        sb.append(")");
        return sb.toString();
    }
}
