/*
 * This file is generated by jOOQ.
 */
package en93.sample.northwindmodulith.generated.jooq.tables.records;


import en93.sample.northwindmodulith.generated.jooq.tables.ShippersTable;
import en93.sample.northwindmodulith.generated.jooq.tables.pojos.ShippersEntity;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ShippersRecord extends UpdatableRecordImpl<ShippersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.shippers.shipperid</code>.
     */
    public ShippersRecord setShipperid(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.shippers.shipperid</code>.
     */
    public Integer getShipperid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.shippers.shippername</code>.
     */
    public ShippersRecord setShippername(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.shippers.shippername</code>.
     */
    public String getShippername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.shippers.phone</code>.
     */
    public ShippersRecord setPhone(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.shippers.phone</code>.
     */
    public String getPhone() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ShippersRecord
     */
    public ShippersRecord() {
        super(ShippersTable.SHIPPERS);
    }

    /**
     * Create a detached, initialised ShippersRecord
     */
    public ShippersRecord(Integer shipperid, String shippername, String phone) {
        super(ShippersTable.SHIPPERS);

        setShipperid(shipperid);
        setShippername(shippername);
        setPhone(phone);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ShippersRecord
     */
    public ShippersRecord(ShippersEntity value) {
        super(ShippersTable.SHIPPERS);

        if (value != null) {
            setShipperid(value.getShipperid());
            setShippername(value.getShippername());
            setPhone(value.getPhone());
            resetChangedOnNotNull();
        }
    }
}
